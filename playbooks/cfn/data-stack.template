AWSTemplateFormatVersion: '2010-09-09'
Description: Open edX Data Servers

Parameters:
  ProjectTag:
    Description: For tracking AWS expenses by project (constant)
    Default: openedx
    Type: String
  VPC:
    Description: VPC to use
    Type: "AWS::EC2::VPC::Id"
  BaseAMI:
    Description: ID of Open edX server base AMI
    Type: String
  UniversityShortName:
    Description: Member University short identifier
    Type: String
  MongoSecurityGroupId:
    Description: build server's security group id
    Type: String
  CommonSecurityGroupId:
    Description: build server's security group id
    Type: String

Resources:
  MongoPrimaryInstance: 
    Type: "AWS::EC2::Instance"
    Metadata:
      # For reference see:
      # https://stackoverflow.com/questions/39760158/ubuntu-could-not-enable-service-cfn-hup
      AWS::CloudFormation::Init:
        config:
          files:
            # cfn-hup configuration
            '/etc/cfn/cfn-hup.conf':
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: 000400
              owner: root
              group: root
            '/etc/cfn/hooks.d/cfn-auto-reloader.conf':
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.MongoPrimaryInstance.Metadata.AWS::CloudFormation::Init
                action=/usr/local/bin/cfn-init -v --stack ${AWS::StackId} --resource MongoPrimaryInstance --region ${AWS::Region}
                runas=root

          services: 
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties: 
      InstanceType: "t2.small"
      ImageId: !Sub "${BaseAMI}"
      KeyName: "openedx-staging"
      SecurityGroupIds: 
        - !Sub ${MongoSecurityGroupId}
      Tags:
        - Key: Name
          Value: !Sub openedx-${UniversityShortName}-mongo1
        - Key: Project
          Value: !Sub ${ProjectTag}
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup
            chmod +x /etc/init.d/cfn-hup
            update-rc.d cfn-hup defaults
            service cfn-hup start
            /usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource MongoPrimaryInstance --region ${AWS::Region}
            /usr/local/bin/cfn-signal --success true --stack ${AWS::StackName} --resource MongoPrimaryInstance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M

  MongoSecondaryInstance: 
    Type: "AWS::EC2::Instance"
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            # cfn-hup configuration
            '/etc/cfn/cfn-hup.conf':
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: 000400
              owner: root
              group: root
            '/etc/cfn/hooks.d/cfn-auto-reloader.conf':
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.MongoSecondaryInstance.Metadata.AWS::CloudFormation::Init
                action=/usr/local/bin/cfn-init -v --stack ${AWS::StackId} --resource MongoSecondaryInstance --region ${AWS::Region}
                runas=root

          services: 
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties: 
      InstanceType: "t2.small"
      ImageId: !Sub "${BaseAMI}"
      KeyName: "openedx-staging"
      SecurityGroupIds: 
        - !Sub ${MongoSecurityGroupId}
      Tags:
        - Key: Name
          Value: !Sub openedx-${UniversityShortName}-mongo2
        - Key: Project
          Value: !Sub ${ProjectTag}
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup
            chmod +x /etc/init.d/cfn-hup
            update-rc.d cfn-hup defaults
            service cfn-hup start
            /usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource MongoSecondaryInstance --region ${AWS::Region}
            /usr/local/bin/cfn-signal --success true --stack ${AWS::StackName} --resource MongoSecondaryInstance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M

  CommonInstance: 
    Type: "AWS::EC2::Instance"
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            # cfn-hup configuration
            '/etc/cfn/cfn-hup.conf':
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: 000400
              owner: root
              group: root
            '/etc/cfn/hooks.d/cfn-auto-reloader.conf':
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.CommonInstance.Metadata.AWS::CloudFormation::Init
                action=/usr/local/bin/cfn-init -v --stack ${AWS::StackId} --resource CommonInstance --region ${AWS::Region}
                runas=root

          services: 
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties: 
      InstanceType: "t2.large"
      ImageId: !Sub "${BaseAMI}"
      KeyName: "openedx-staging"
      SecurityGroupIds: 
        - !Sub ${CommonSecurityGroupId}
      Tags:
        - Key: Name
          Value: !Sub openedx-${UniversityShortName}-common
        - Key: Project
          Value: !Sub ${ProjectTag}
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz
            cp /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup
            chmod +x /etc/init.d/cfn-hup
            update-rc.d cfn-hup defaults
            service cfn-hup start
            /usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource CommonInstance --region ${AWS::Region}
            /usr/local/bin/cfn-signal --success true --stack ${AWS::StackName} --resource CommonInstance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M

Outputs:
  MongoPrimaryIp:
    Value: !GetAtt MongoPrimaryInstance.PrivateIp
  MongoSecondaryIp:
    Value: !GetAtt MongoSecondaryInstance.PrivateIp
  CommonServerIp:
    Value: !GetAtt CommonInstance.PrivateIp
