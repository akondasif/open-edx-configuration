# Create Open edX data stack
#
# Usage:
#   ansible-playbook -vvvv create_data_stack.yml -e full_name=... -e short_name=... -e build_sg=...
---
- hosts: localhost
  tasks:
    - name: create Open edX Security stack
      cloudformation:
        stack_name: "Open-edX-{{ full_name }}-Security"
        region: "us-east-1"
        state: "present"
        template: "cfn/security-stack.template"
        template_parameters:
          VPC: "vpc-2ec89b4b"
          UniversityShortName: "{{ short_name }}"
          BuildServerSecurityGroupId: "{{ build_sg }}"
        tags:
          Stack: "Open-edX-{{ full_name }}-Security"
          Project: "openedx"
      register: "security_stack"

    - name: create MySQL RDS
      cloudformation:
        stack_name: "Open-edX-{{ full_name }}-RDS"
        region: "us-east-1"
        state: "present"
        template: "cfn/rds-stack.template"
        template_parameters:
          UniversityShortName: "{{ short_name }}"
          DBUser: "root"
          DBPassword: "password"
          RdsAllocatedStorage: 5
          RdsSecurityGroupId: "{{ security_stack.stack_outputs.RdsSecurityGroup }}"
        tags:
          Stack: "Open-edX-{{ full_name }}-RDS"
          Project: "openedx"
      register: "rds_stack"

    - name: create Open edX data servers
      cloudformation:
        stack_name: "Open-edX-{{ full_name }}-DataServers"
        region: "us-east-1"
        state: "present"
        template: "cfn/data-server-stack.template"
        template_parameters:
          VPC: "vpc-2ec89b4b"
          UniversityShortName: "{{ short_name }}"
          MongoSecurityGroupId: "{{ security_stack.stack_outputs.MongoServerSecurityGroup }}"
          CommonSecurityGroupId: "{{ security_stack.stack_outputs.CommonServerSecurityGroup }}"
          BaseAMI: "ami-fb3232ed"
        tags:
          Stack: "Open-edX-{{ full_name }}-DataServers"
          Project: "openedx"
      register: "data_server_stack"


    - name: set variables for server ips
      set_fact:
        mongo1: "{{ data_server_stack.stack_outputs.MongoPrimaryIp }}"
        mongo2: "{{ data_server_stack.stack_outputs.MongoSecondaryIp }}"
        common: "{{ data_server_stack.stack_outputs.CommonServerIp }}"
        env_source: "/tmp/env.sh"
        env_yml: "/tmp/env.yml"

    - name: delete file if it already exists
      file:
        dest: "{{ env_source }}"
        state: absent

    - name: delete file if it already exists
      file:
        dest: "{{ env_yml }}"
        state: absent

    - name: create file
      file:
        dest: "{{ env_source }}"
        state: touch

    - name: create file
      file:
        dest: "{{ env_yml }}"
        state: touch

    - blockinfile:
        dest: "{{ env_source }}"
        block:  |
          export MONGO1={{ mongo1 }}
          export MONGO2={{ mongo2 }}
          export COMMON={{ common }}
          export ELASTIC={{ common }}
          export RABBIT={{ common }}
          export RDS={{ rds_stack.stack_outputs.RdsEndpointAddress }}
        insertafter: EOF

    - blockinfile:
        dest: "{{ env_yml }}"
        block: |
          MONGO1: {{ common }}
          MONGO2: {{ common }}
          COMMON: {{ common }}
          ELASTIC: {{ common }}
          RABBIT: {{ common }}
          RDS: {{ rds_stack.stack_outputs.RdsEndpointAddress }}
        insertafter: EOF


    - name: delete file if it already exists
      file:
        dest: /tmp/hosts
        state: absent

    - name: create file
      file:
        dest: /tmp/hosts
        state: touch

    - blockinfile:
        dest: /tmp/hosts
        block: |
          {{ mongo1 }} mongo1
          {{ mongo2 }} mongo2
          {{ common }} elastic rabbit
        insertafter: EOF

    - add_host:
        name: "{{ mongo1 }}"
        groups: other

    - add_host:
        name: "{{ mongo2 }}"
        groups: other

    - add_host:
        name: "{{ common }}"
        groups: other


- hosts: other
  vars:
    ansible_ssh_private_key_file: "/home/ubuntu/openedx-staging.pem"
  tasks:
    - name: copy file
      copy:
        src: /tmp/env.sh
        dest: /tmp/env.sh
...
